// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/tg_reaction/internal/services (interfaces: ClockService)
//
// Generated by this command:
//
//	mockgen -destination=../../mocks/services/mock_clock_service.go -package=services_mocks github.com/fromsi/tg_reaction/internal/services ClockService
//

// Package services_mocks is a generated GoMock package.
package services_mocks

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockClockService is a mock of ClockService interface.
type MockClockService struct {
	ctrl     *gomock.Controller
	recorder *MockClockServiceMockRecorder
	isgomock struct{}
}

// MockClockServiceMockRecorder is the mock recorder for MockClockService.
type MockClockServiceMockRecorder struct {
	mock *MockClockService
}

// NewMockClockService creates a new mock instance.
func NewMockClockService(ctrl *gomock.Controller) *MockClockService {
	mock := &MockClockService{ctrl: ctrl}
	mock.recorder = &MockClockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClockService) EXPECT() *MockClockServiceMockRecorder {
	return m.recorder
}

// Now mocks base method.
func (m *MockClockService) Now() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Now")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// Now indicates an expected call of Now.
func (mr *MockClockServiceMockRecorder) Now() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Now", reflect.TypeOf((*MockClockService)(nil).Now))
}
