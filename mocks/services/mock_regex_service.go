// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fromsi/tg_reaction/internal/services (interfaces: RegexService)
//
// Generated by this command:
//
//	mockgen -destination=../../mocks/services/mock_regex_service.go -package=services_mocks github.com/fromsi/tg_reaction/internal/services RegexService
//

// Package services_mocks is a generated GoMock package.
package services_mocks

import (
	reflect "reflect"

	json "github.com/fromsi/tg_reaction/pkg/json"
	gomock "go.uber.org/mock/gomock"
)

// MockRegexService is a mock of RegexService interface.
type MockRegexService struct {
	ctrl     *gomock.Controller
	recorder *MockRegexServiceMockRecorder
	isgomock struct{}
}

// MockRegexServiceMockRecorder is the mock recorder for MockRegexService.
type MockRegexServiceMockRecorder struct {
	mock *MockRegexService
}

// NewMockRegexService creates a new mock instance.
func NewMockRegexService(ctrl *gomock.Controller) *MockRegexService {
	mock := &MockRegexService{ctrl: ctrl}
	mock.recorder = &MockRegexServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegexService) EXPECT() *MockRegexServiceMockRecorder {
	return m.recorder
}

// FindReaction mocks base method.
func (m *MockRegexService) FindReaction(text string) json.Reaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindReaction", text)
	ret0, _ := ret[0].(json.Reaction)
	return ret0
}

// FindReaction indicates an expected call of FindReaction.
func (mr *MockRegexServiceMockRecorder) FindReaction(text any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindReaction", reflect.TypeOf((*MockRegexService)(nil).FindReaction), text)
}
